{
  "/api/v2/robot/capabilities/CarpetModeControlCapability": {
    "get": {
      "tags": [
        "CarpetModeControlCapability"
      ],
      "summary": "Get carpet mode settings",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "CarpetModeControlCapability"
      ],
      "summary": "Set carpet mode settings",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/CarpetModeControlCapability/properties": {
    "get": {
      "tags": [
        "CarpetModeControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/PersistentMapControlCapability": {
    "get": {
      "tags": [
        "PersistentMapControlCapability"
      ],
      "summary": "Get persistent map setting",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "PersistentMapControlCapability"
      ],
      "summary": "Set persistent map setting",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/PersistentMapControlCapability/properties": {
    "get": {
      "tags": [
        "PersistentMapControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/KeyLockCapability": {
    "get": {
      "tags": [
        "KeyLockCapability"
      ],
      "summary": "Get key lock setting",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "KeyLockCapability"
      ],
      "summary": "Set key lock setting",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/KeyLockCapability/properties": {
    "get": {
      "tags": [
        "KeyLockCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/StatusLEDControlCapability": {
    "get": {
      "tags": [
        "StatusLEDControlCapability"
      ],
      "summary": "Get Status LED state",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "StatusLEDControlCapability"
      ],
      "summary": "Activate/deactivate Status LED",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/StatusLEDControlCapability/properties": {
    "get": {
      "tags": [
        "StatusLEDControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/ButtonLightsControlCapability": {
    "get": {
      "tags": [
        "ButtonLightsControlCapability"
      ],
      "summary": "Get button lights state",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "ButtonLightsControlCapability"
      ],
      "summary": "Activate/deactivate button lights",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/ButtonLightsControlCapability/properties": {
    "get": {
      "tags": [
        "ButtonLightsControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/ObstacleAvoidanceControlCapability": {
    "get": {
      "tags": [
        "ObstacleAvoidanceControlCapability"
      ],
      "summary": "Get obstacle avoidance setting",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "ObstacleAvoidanceControlCapability"
      ],
      "summary": "Set obstacle avoidance setting",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/ObstacleAvoidanceControlCapability/properties": {
    "get": {
      "tags": [
        "ObstacleAvoidanceControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2/robot/capabilities/AutoEmptyDockAutoEmptyControlCapability": {
    "get": {
      "tags": [
        "AutoEmptyDockAutoEmptyControlCapability"
      ],
      "summary": "Get auto empty dock auto empty setting",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "AutoEmptyDockAutoEmptyControlCapability"
      ],
      "summary": "Set auto empty dock auto empty setting",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "enable",
                    "disable"
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "$ref": "#/components/responses/200"
        },
        "400": {
          "$ref": "#/components/responses/400"
        }
      }
    }
  },
  "/api/v2/robot/capabilities/AutoEmptyDockAutoEmptyControlCapability/properties": {
    "get": {
      "tags": [
        "AutoEmptyDockAutoEmptyControlCapability"
      ],
      "summary": "Get various capability-related properties",
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  }
}
